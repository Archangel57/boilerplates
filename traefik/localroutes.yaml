http:
  middlewares:
    pihole-addprefix:
      addPrefix:
        prefix: /admin
    pihole-redirectregex:
      redirectRegex:
        regex: "https?://pihole.local.domain.com/$"
        replacement: "https://pihole.local.domain.com/admin/"
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https
    
  services:
    file-browser-local:
      loadBalancer:
        servers:
          - url: "http://filebrowserIP:port/"
    plex-local:
      loadBalancer:
        servers:
          - url: "http://plexIP:port/"
    proxmox-local:
      loadBalancer:
        serversTransport: selfsigned
        servers:
          - url: "https://proxmoxIP:port/"
    portainer-local:
      loadBalancer:
        serversTransport: selfsigned
        servers:
          - url: "https://portainerIP:port/"
    wazuh-local:
      loadBalancer:
        serversTransport: selfsigned
        servers:
          - url: "https://wazuhIP:port/"
    prometheus-local:
      loadBalancer:
        servers:
          - url: "http://prometheusIP:port/"
    grafana-local:
      loadBalancer:
        servers:
          - url: "https://grafanaIP:port/"
    truenas-local:
      loadBalancer:
        servers:
          - url: "https://TrueNASIP/"
    unifi-local:
      loadBalancer:
        serversTransport: selfsigned
        servers:
          - url: "https://unifiIP:port/"
    pihole-local:
      loadBalancer:
        servers:
          - url: "http://piholeIP/"
        passHostHeader: true
  
  routers:
    prometheus-local:
      entryPoints:
        - https
      rule: "Host(`prometheus.local.domain.com`)"
      service: prometheus-local
      tls:
        certResolver: production
    grafana-local:
      entryPoints:
        - https
      rule: "Host(`grafana.local.domain.com`)"
      service: grafana-local
      tls:
        certResolver: production
    truenas-local:
      entryPoints:
        - https
      rule: "Host(`truenas.local.domain.com`)"
      service: truenas-local
      tls:
        certResolver: production
    unifi-local:
      entryPoints:
        - https
      rule: "Host(`unifi.local.domain.com`)"
      service: unifi-local
      tls:
        certResolver: production
    pihole-local:
      entryPoints:
        - https
      rule: "Host(`pihole.local.domain.com`)"
      service: pihole-local
      tls:
        certResolver: production
      middlewares:
        - default-headers
        - pihole-redirectregex
#        - pihole-addprefix
        - https-redirectscheme
    file-browser-local:
      entryPoints:
        - https
      rule: "Host(`files.local.domain.com`)"
      service: file-browser-local
      tls:
        certResolver: production
    plex-local:
      entryPoints:
        - https
      rule: "Host(`plex.local.domain.com`)"
      service: plex-local
      tls:
        certResolver: production
    proxmox-local:
      entryPoints:
        - https
      rule: "Host(`proxmox.local.domain.com`)"
      service: proxmox-local
      tls:
        certResolver: production
    portainer-local:
      entryPoints:
        - https
      rule: "Host(`portainer.local.domain.com`)"
      service: portainer-local
      tls:
        certResolver: production
    wazuh-local:
      entryPoints:
        - https
      rule: "Host(`wazuh.local.domain.com`)"
      service: wazuh-local
      tls:
        certResolver: production
  
# Skip verifying if a service has a self signed cert on it's internal IP.  
  serversTransports:
    selfsigned:
      insecureSkipVerify: True
